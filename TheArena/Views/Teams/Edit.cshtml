@model TheArena.Models.Team

@{
    ViewBag.Title = "Éditer équipe";
}

<h2>Éditer l'équipe</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TeamId)

        <div class="form-group">
            @*@Html.LabelFor(model => model.Initials, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="control-label col-md-2"> Initiales</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Initials, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Initials, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="control-label col-md-2">Nom d'équipe</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @* @Html.LabelFor(model => model.Captain, "Captain", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="control-label col-md-10"> Capitaine d'équipe</div>
                    <div class="col-md-10">
                        @Html.DropDownList("Captain", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Captain, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    
                    <div class="col-md-offset-2 col-md-3">
                        <div class=" ">
                            
                            @Html.ActionLink(" Supprimer l'équipe ", "Delete", new { id = Model.TeamId }, new { @class = "col-md-12 btn btn-outline-danger" })
                        </div>
                    </div>

                    @*<div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Deleted)

                        </div>
                    </div> *@


                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-3">
                        <input type="submit" value="Sauvegarder les changements" class="btn btn-outline-success col-md-12" />
                    </div>
                </div>
            </div>
        }
        <div class="col-md-offset-2 col-md-2">
            <div class="">
                
                @Html.ActionLink(" Retourner à la liste des équipes ", "Index", null, new { @class = " btn btn-outline-dark" })
            </div>
        </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
