@model TheArena.Models.Tournament

@{
    ViewBag.Title = "Create";
}

<h3 class="text-danger text-center"> @ViewBag.Message</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="form-group col-3">
            <label for="tournamentId">Initiales du tournoi</label><br>
            @Html.EditorFor(model => model.Initials, new { htmlAttributes = new { @class = "form-control", @placeholder = "Initiales" } })
            @Html.ValidationMessageFor(model => model.Initials, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-8">
            <label for="name">Nom du tournoi</label><br>
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nom du tournoi" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="dropdown-divider"></div>
    <label for="rules">Règles</label>
    @Html.TextAreaFor(model => model.Rules, new { @class = "form-control", @placeholder = "Inscrire les règles ici" })
    @Html.ValidationMessageFor(model => model.Rules, "", new { @class = "text-danger" })
    <div class="dropdown-divider"></div>

    <h5><span class="fa fa-gamepad"></span> Jeu joué au tournoi</h5>
    @Html.DropDownList("Game", null, htmlAttributes: new { @class = "form-control form-control-sm" })
    @Html.ValidationMessageFor(model => model.Game, "", new { @class = "text-danger" })
    <div class="dropdown-divider"></div>

    <h5 class="card-title">Paramètres des équipes</h5>
    <div class="form-inline">
        <div class="form-group">
            <label id="playerNumber">Taille des équipes :</label>
            @Html.EditorFor(model => model.PlayerNumber, new { htmlAttributes = new { @class = "form-control m1" } })
            @Html.ValidationMessageFor(model => model.PlayerNumber, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label id="slots">Nombre d'équipes :</label>
            @Html.EditorFor(model => model.Slots, new { htmlAttributes = new { @class = "form-control m-1" } })
            @Html.ValidationMessageFor(model => model.Slots, "", new { @class = "text-danger" })
        </div>
    </div>
    <h4><span class="fa fa-clock"></span> Période d'inscription</h4>
    <div class="form-inline">
        <div class="form-group">
            <label for="registeringPeriodStart">Débute le</label>
            @Html.EditorFor(model => model.PeriodRegistration.Start, new { htmlAttributes = new { Name = "registeringPeriodStart", @class = "form-control m-1" } })
            @Html.ValidationMessageFor(model => model.PeriodRegistration.Start, "", new { @class = "text-danger", datavalmsgfor = "registeringPeriodStart" })
        </div>
        <div class="form-group">
            <label for="registeringPeriodEnd">Termine le</label>
            @Html.EditorFor(model => model.PeriodRegistration.Ending, new { htmlAttributes = new { Name = "registeringPeriodEnd", @class = "form-control m-1" } })
            @Html.ValidationMessageFor(model => model.PeriodRegistration.Ending, "", new { @class = "text-danger", datavalmsgfor = "registeringPeriodEnd" })
        </div>
    </div>
    <h4><span class="fa fa-clock"></span> Période de déroulement</h4>
    <div class="form-inline">
        <div class="form-group">
            <label for="playingPeriodStart">Débute le</label>
            @Html.EditorFor(model => model.PeriodPlay.Start, new { htmlAttributes = new { Name = "playingPeriodStart", @class = "form-control m-1" } })
            @Html.ValidationMessageFor(model => model.PeriodPlay.Start, "", new { @class = "text-danger", datavalmsgfor = "playingPeriodStart" })
        </div>
        <div class="form-group">
            <label for="playingPeriodEnd">Termine le</label>
            @Html.EditorFor(model => model.PeriodPlay.Ending, new { htmlAttributes = new { Name = "playingPeriodEnd", @class = "form-control m-1" } })
            @Html.ValidationMessageFor(model => model.PeriodPlay.Ending, "", new { @class = "text-danger", datavalmsgfor = "playingPeriodEnd" })
        </div>
    </div>

    <p class="text-right"><button type="submit" class="btn btn-primary">Submit</button></p>
}
<script src="https://cdn.jsdelivr.net/momentjs/2.12.0/moment.min.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
