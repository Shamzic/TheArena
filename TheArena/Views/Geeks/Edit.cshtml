@model TheArena.Models.Geek
@using TheArena.Models

@{
    ViewBag.Title = "Edit";
}

<h2>Paramètres utilisateur</h2>

<ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" id="pills-profile-tab" data-toggle="pill" href="#pills-profile" role="tab" aria-controls="pills-profile" aria-selected="true">Modifier le profil</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="pills-parameters-tab" data-toggle="pill" href="#pills-parameters" role="tab" aria-controls="pills-parameters" aria-selected="false">Paramètres avancés</a>
    </li>
</ul>

<div class="tab-content" id="pills-tabContent">
    <div class="tab-pane fade show active" id="pills-profile" role="tabpanel" aria-labelledby="pills-home-tab">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.GeekId)
                <div class="form-group">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
            <div>
                @Html.ActionLink("Delete", "Delete", new { id = Model.Username})
            </div>
        }

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>

    <div class="tab-pane fade" id="pills-parameters" role="tabpanel" aria-labelledby="pills-profile-tab">
        @using (Html.BeginForm("Parameters", "Geeks"))
        {
            @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <input type="hidden" name="id" value="@Model.GeekId">
            @foreach (var setting in (Setting[])ViewBag.Settings)
            {
                <div class="form-row px-4">
                    <label class="col-md-2" for="@setting.Name">@setting.Name</label>
                    <input type="hidden" name="setting" value="@setting.SettingId">
                    <div class="col-md-10">
                        <select name="value" id="@setting.Name">
                            @foreach (var value in ((SettingValues[])ViewBag.Values).Where(v => v.Setting1.Name == setting.Name))
                            {
                                <option value="@value.Value">@value.Value</option>
                            }
                        </select>
                    </div>
                </div>
            }

            <div class="form-group py-3">
                <div class="col-md-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
        }
    </div>

</div>


